package ua.com.prologistic.misc;

import java.util.ArrayList;
import java.util.List;

public class WrapperClasses {

    private static void doSomething(Object obj){                      // метод используется для показа полиморфизма, так как он может принимать объект любого класса, включая классы-оболочки.

    }

    public static void main(String args[]){                          // в этом методе выполняется основная логика программы. (точка входа в программу)
        int i = 10;                                                  // создается  переменная i типа int и ей присваивается значение 10.
        char c = 'a';                                                // создается  переменная c типа char и ей присваивается значение a.

        //примитивы просты в использовании
        int j = i+3;                                                 // переменная j получает значение, равное сумме i+3

        //полиморфизм достигается с помощью классов-оболочек, мы не можем использовать примитивы здесь
        doSomething(new Character(c));                               // вызывается метод doSomething

        List<Integer> list = new ArrayList<Integer>();               // создается список list, типа integer
        //классы-оболочки могут быть использованы в коллекциях
        Integer in = new Integer(i);                                 // создается объект типа integer, с название in
        list.add(in);                                                // добавляет объект in в список list

        //Автоупаковка заботится о преобразовании примитива в соответственный класс-оболочку
        list.add(j);                                                 // автоупаковка произодится автоматически

        //классы-оболочки могут быть null
        in = null;                                                   // переменной in присваивается значение null
    }
}